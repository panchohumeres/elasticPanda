version: "3"

services:

  search:
    build:
      context: ./flask_app
    ports:
      - ${SEARCH_PORT}:5000
    environment:
      - ELASTIC_USER=$ELASTIC_USER
      - ELASTIC_PASSWD=$ELASTIC_PASSWORD
      - ELASTIC_PORT=$ELASTIC_PORT
      - DOMAIN_ELASTIC=$DOMAIN_ELASTIC
      - MODE=$MODE  
    volumes:
      - certs:/certs
      - ./flask_app:/code
      - ./data:/data
      - ./args:/args

  es01:
    #container_name: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - node.name=es01
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD 
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.authc.anonymous.roles=dashboard_only_custom
      - xpack.security.authc.anonymous.authz_exception=true

    volumes: ['${HOST_DATA_PATH}/data01:/usr/share/elasticsearch/data','certs:$CERTS_DIR']
    ports:
      - 9200:9200
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  es02:
    #container_name: es02
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es02/es02.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es02/es02.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es02/es02.key
    volumes: ['${HOST_DATA_PATH}/data01:/usr/share/elasticsearch/data','certs:$CERTS_DIR']

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes: ['${HOST_DATA_PATH}/certbot/conf:/etc/letsencrypt','${HOST_DATA_PATH}/certbot/www:/var/www/certbot']
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  
  nginx:
    build:
      context: ./nginx
    environment:
      - LISTEN_PORT=80
      - DOMAIN_ELASTIC=$DOMAIN_ELASTIC
      - SEARCH_DOMAIN=$SEARCH_DOMAIN
      - SEARCH_PORT=${SEARCH_PORT}
      - SEARCH_SERVER_NAME=$SEARCH_SERVER_NAME
    volumes: ['${PWD}/nginx/conf:/etc/nginx/conf.d','${PWD}/nginx/sites-enabled:/etc/nginx/sites-enabled',
    '${HOST_DATA_PATH}/certbot/conf:/etc/letsencrypt','${HOST_DATA_PATH}/certbot/www:/var/www/certbot',
    ]
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  wait_until_ready:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    command: /usr/bin/true
    depends_on: ["es01"]

volumes:
  certs:
    driver: local
    driver_opts:
      type: none
      device: $PWD/${HOST_DATA_PATH}/certs
      o: bind